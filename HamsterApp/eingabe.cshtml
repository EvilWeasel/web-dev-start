@using HamsterApp;



@{



    Dictionary<string, string> errors = new Dictionary<string, string>()
{
{"Name" ,"" },
{ "Alter","" },
{"DB_ERROR","" }
};
    //if(!string.IsNullOrEmpty(Request["name"]))
    string name = "";
    string farbe = "";
    int alter = 100;
    string geschlecht = "";
    bool ok = false;



    if (this.IsPost)
    {
        ok = true;
        name = Request["name"];
        bool errorAlter = int.TryParse(Request["alter"], out alter);
        farbe = Request["farbe"];
        geschlecht = Request["geschlecht"];



        if (name == "")
        {
            errors["Name"] = "Name darf nicht leer sein";
            ok = false;
        }
        if (!errorAlter)
        {
            errors["Alter"] = "Alter muss zwischen 0 und 730 sein";
            ok = false;
        }
        else if (alter < 0)
        {
            errors["Alter"] = "Alter darf nicht kleiner als 0 sein";
            ok = false;
        }
        else if (alter >= 730)
        {
            errors["Alter"] = "Alter darf nicht größer als 730 sein";
            ok = false;
        }
        if (ok)
        {
            Hamster h = new Hamster();
            h.Farbe = (Farbe)int.Parse(farbe);
            h.Geschlecht = (Geschlecht)int.Parse(geschlecht);
            h.Alter = alter;
            h.Name = name;
            using (HamsterDB db = new HamsterDB())
            {
                ok = db.InsertHamster(h);
                if (!ok)
                {
                    errors["DB_ERROR"] = "Fehler beim Erstellen des Datensatzes.";
                }
            }
        }



    }
}
<!DOCTYPE html>
<html>
<head>
    <title>HamsterApp Eingabe</title>
    <link href="~/hamsterstyle.css" rel="stylesheet" />
</head>
<body>
    <h1>Hamster-App</h1>
    <h3>Eingabe</h3>
    @Html.Raw(HamsterApp.HamsterHelper.CreateMenu(2))



    <div>
        @if (!ok)
        {
            <form method="post" onsubmit="return check()">
                <!-- -->
                <div class="ctrlgroup">
                    <label for="name">Name</label>
                    <input type="text" id="name" name="name" value="@name" placeholder="Horst" onblur="isEmpty(this)"/>
                    <div class="error" id="err_name"></div>
                </div>



                <div class="ctrlgroup">
                    <label for="geschlecht">Geschlecht</label>
                    <select id="geschlecht" name="geschlecht">
                        @foreach (Geschlecht g in Enum.GetValues(typeof(Geschlecht)))
                        {
                            <option value="@((int)g)" @(((int)g).ToString() == geschlecht ? "selected" : "")>@g</option>
                            @*if (((int)g).ToString() == geschlecht)
                                {
                                <option value="@((int)g)" selected>@g</option>
                                }
                                else
                                {
                                <option value="@((int)g)">@g</option>
                                }*@
                        }
                    </select>
                    <span class="error" id="err_geschlecht"></span>

                </div>

                <div class="ctrlgroup">
                    <label for="farbe">Farbe</label>
                    <select id="farbe" name="farbe">
                        @foreach (Farbe f in Enum.GetValues(typeof(Farbe)))
                        {
                            <option value="@((int)f)" @(((int)f).ToString() == farbe ? "selected" : "")>@f</option>
                        }
                    </select>
                    <span class="error" id="err_farbe"></span>

                </div>



                <div class="ctrlgroup">
                    <label for="alter">Alter</label>
                    <input type="number" id="alter" name="alter" value="@alter" />
                    <div class="error" id="err_alter">@errors["Alter"]</div>
                </div>



                <div class="ctrlgroup">
                    <input type="submit" value="Speichern" />
                    <input type="reset" value="Löschen" />
                </div>
            </form>
            <div class="error">@errors["DB_ERROR"]</div>
        }
        else
        {
            <p>DATEN WURDEN GESPEICHERT</p>
        }

        <script>
            function check() {
                ok = true

                let elems = [
                    document.getElementById("name"),
                    document.getElementById("geschlecht"),
                    document.getElementById("farbe"),
                    document.getElementById("alter")
                ]
                for (var x in elems) {
                    if (elems[x].value == "") {
                        ok = false
                        err = document.getElementById("err_" + elems[x].name)
                        err.innerHTML = "Pflichtfeld!"
                    }
                }
                return ok

            }

            function isEmpty(elem) {
                err = document.getElementById("err_" + elem.name)
                err.innerHTML = "c:"
            }
        </script>
    </div>
</body>
</html>